/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
  IsNumber,
  Min,
  Max,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumOrderDeliveryType } from "./EnumOrderDeliveryType";
import { OrderDetailUpdateManyWithoutOrdersInput } from "./OrderDetailUpdateManyWithoutOrdersInput";
import { EnumOrderPaymentType } from "./EnumOrderPaymentType";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deliveryDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumOrderDeliveryType,
  })
  @IsEnum(EnumOrderDeliveryType)
  @IsOptional()
  @Field(() => EnumOrderDeliveryType, {
    nullable: true,
  })
  deliveryType?: "StorePickup" | "Others" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  orderDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => OrderDetailUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => OrderDetailUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => OrderDetailUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  orderDetails?: OrderDetailUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    enum: EnumOrderPaymentType,
  })
  @IsEnum(EnumOrderPaymentType)
  @IsOptional()
  @Field(() => EnumOrderPaymentType, {
    nullable: true,
  })
  paymentType?: "CashOnDelivery" | "BankTransfer" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  shippingAddress?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalPrice?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  township?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  zipCode?: string | null;
}

export { OrderUpdateInput as OrderUpdateInput };
