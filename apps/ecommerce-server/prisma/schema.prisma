datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  active          Boolean?
  createdAt       DateTime @default(now())
  email           String?  @unique
  firstName       String?
  id              String   @id @default(cuid())
  lastName        String?
  orders          Order[]
  password        String
  phone           String?
  resetPwdExpire  String?
  resetPwdToken   String?
  roles           Json
  shippingAddress String?
  updatedAt       DateTime @updatedAt
  username        String   @unique
}

model Product {
  category        Category?    @relation(fields: [categoryId], references: [id])
  categoryId      String?
  createdAt       DateTime     @default(now())
  description     String?
  detail          String?
  discountPrecent String?
  id              String       @id @default(cuid())
  images          Json?
  name            String?
  orderDetail     OrderDetail? @relation(fields: [orderDetailId], references: [id])
  orderDetailId   String?
  price           Float?
  stock           String?
  tag             Tag?         @relation(fields: [tagId], references: [id])
  tagId           String?
  updatedAt       DateTime     @updatedAt
}

model Category {
  createdAt      DateTime  @default(now())
  description    String?
  id             String    @id @default(cuid())
  name           String?
  products       Product[]
  thumbnailImage String?
  updatedAt      DateTime  @updatedAt
}

model Tag {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String?
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Order {
  city            String?
  createdAt       DateTime               @default(now())
  deliveryDate    DateTime?
  deliveryType    EnumOrderDeliveryType?
  id              String                 @id @default(cuid())
  orderDate       DateTime?
  orderDetails    OrderDetail[]
  paymentType     EnumOrderPaymentType?
  shippingAddress String?
  state           String?
  totalPrice      Float?
  township        String?
  updatedAt       DateTime               @updatedAt
  user            User?                  @relation(fields: [userId], references: [id])
  userId          String?
  zipCode         String?
}

model OrderDetail {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  order     Order?    @relation(fields: [orderId], references: [id])
  orderId   String?
  products  Product[]
  quantity  Int?
  updatedAt DateTime  @updatedAt
}

enum EnumOrderDeliveryType {
  StorePickup
  Others
}

enum EnumOrderPaymentType {
  CashOnDelivery
  BankTransfer
}
